name: My plan
level: beginner
author: Jit
version: 0.1
owners:
  default: null
references:
  - https://www.jit.io
tags: []
items:
  - name: ACOM-001. Configure AWS account contacts
    uses: >-
      jitsecurity-controls/jit-plans/items/communication_with_aws/item-account-communication.yml@latest
    input:
      note: 'yes'
      status: passed
  - name: ACOM-002. Set account contact information
    uses: >-
      jitsecurity-controls/jit-plans/items/communication_with_aws/item-account-contacts-config.yml@latest
    input:
      note: 'yes'
      status: passed
  - name: WAFR-001. Conduct periodic architecture reviews (minimum once every year)
    uses: >-
      jitsecurity-controls/jit-plans/items/architecture_review/item-arch-review.yml@latest
  - name: >-
      WAFR-002. Review the AWS Shared Responsibility Models for Security and
      Resiliency
    uses: >-
      jitsecurity-controls/jit-plans/items/architecture_review/item-arch-shared-responsibility.yml@latest
    input:
      note: new one
      status: passed
  - name: >-
      IAM-009. Ensure all credentials used by your applications are not
      hard-coded
    uses: >-
      jitsecurity-controls/jit-plans/items/identity_and_access_management/item-aws-ftr-secret-detection.yml@latest
  - name: >-
      BAR-002. Periodically recover data to verify the integrity of your backup
      process
    uses: >-
      jitsecurity-controls/jit-plans/items/backups_and_recovery/item-backup-recover-schedule.yml@latest
  - name: CTL-003. Protect log storage from unintended access
    uses: >-
      jitsecurity-controls/jit-plans/items/aws_cloudtrail/item-cloudtrail-access-protection.yml@latest
  - name: CTL-001. Configure CloudTrail in all AWS Accounts and in all Regions
    uses: >-
      jitsecurity-controls/jit-plans/items/aws_cloudtrail/item-cloudtrail-config.yml@latest
  - name: CTL-004. Enable CloudTrail log file integrity validation
    uses: >-
      jitsecurity-controls/jit-plans/items/aws_cloudtrail/item-cloudtrail-integrity-validation.yml@latest
  - name: >-
      CTL-002. Store logs in in a separate administrative domain with limited
      access
    uses: >-
      jitsecurity-controls/jit-plans/items/aws_cloudtrail/item-cloudtrail-separate-account.yml@latest
    input:
      note: 'yes'
      status: passed
  - name: Scan your code for vulnerabilities (SAST)
    uses: >-
      jitsecurity-controls/jit-plans/items/code/item-code-vulnerability.yml@latest
  - name: CAA-006. Provide read-only access to external ID to customers
    uses: >-
      jitsecurity-controls/jit-plans/items/cross_account_access/item-cross-account-external-id-ro.yml@latest
  - name: Scan your infrastructure-as-code (IaC) for misconfigurations
    uses: >-
      jitsecurity-controls/jit-plans/items/infrastructure/item-iac-misconfiguration-detection.yml@latest
  - name: IAM-002. Rotate credentials regularly
    uses: >-
      jitsecurity-controls/jit-plans/items/identity_and_access_management/item-iam-creds-rotation.yml@latest
  - name: >-
      IAM-001. Enable multi-factor authentication for all Human Identities with
      AWS access
    uses: >-
      jitsecurity-controls/jit-plans/items/identity_and_access_management/item-iam-mfa.yml@latest
  - name: IAM-004. Create individual identities (no shared credentials)
    uses: >-
      jitsecurity-controls/jit-plans/items/identity_and_access_management/item-iam-no-shared-creds.yml@latest
    input:
      note: Shuki
      status: failed
  - name: IAM-003. Use strong password policy
    uses: >-
      jitsecurity-controls/jit-plans/items/identity_and_access_management/item-iam-no-strong-policy.yml@latest
  - name: HOST-001. Confirm your hosting model
    uses: >-
      jitsecurity-controls/jit-plans/items/partner_hosted/item-partner-hosting-model.yml@latest
    input:
      note: blabla
      status: passed
  - name: ARC-001. Use root user only by exception
    uses: >-
      jitsecurity-controls/jit-plans/items/aws_root_account/item-root-account-exception.yml@latest
  - name: >-
      ARC-005. Create an incident response (IR) runbook for root account
      credential misuse
    uses: >-
      jitsecurity-controls/jit-plans/items/aws_root_account/item-root-account-ir.yml@latest
    input:
      note: 'yes'
      status: passed
  - name: ARC-004. Remove access keys for the root user
    uses: >-
      jitsecurity-controls/jit-plans/items/aws_root_account/item-root-account-keys.yml@latest
  - name: >-
      ARC-003. Enable multi-factor authentication (MFA) on the root user for all
      AWS accounts
    uses: >-
      jitsecurity-controls/jit-plans/items/aws_root_account/item-root-account-mfa.yml@latest
  - name: Scan infrastructure for runtime misconfigurations
    uses: >-
      jitsecurity-controls/jit-plans/items/infrastructure/item-runtime-misconfiguration-detection.yml@latest
  - name: >-
      S3-003. Implement monitoring and alerting to identify when S3 buckets
      become public
    uses: >-
      jitsecurity-controls/jit-plans/items/amazon_s3_bucket_access/item-s3-monitoring-public.yml@latest
  - name: S3-002. Restrict access to S3 buckets that should not have public access
    uses: >-
      jitsecurity-controls/jit-plans/items/amazon_s3_bucket_access/item-s3-no-public-access.yml@latest
  - name: Scan code for hard-coded secrets
    uses: jitsecurity-controls/jit-plans/items/code/item-secret-detection.yml@latest
  - name: >-
      SDAT-003. Only use protocols with encryption when transmitting sensitive
      data outside of your VPC
    uses: >-
      jitsecurity-controls/jit-plans/items/sensitive_data/item-sensitive-data-encrypt-out-vpc.yml@latest
  - name: SDAT-001. Identify sensitive data
    uses: >-
      jitsecurity-controls/jit-plans/items/sensitive_data/item-sensitive-data-identify.yml@latest
  - name: >-
      SUP-001. Enable AWS Business Support (or greater) on all production AWS
      accounts
    uses: >-
      jitsecurity-controls/jit-plans/items/support_level/item-support-business.yml@latest
    input:
      note: what now?
      status: passed
  - name: Scan your web application for vulnerabilities
    uses: >-
      jitsecurity-controls/jit-plans/items/runtime/item-web-app-scanner.yml@latest
  - name: >
      IAM-005. Use IAM roles and its temporary security credentials to provide
      access to third parties
    uses: >-
      jitsecurity-controls/jit-plans/items/identity_and_access_management/item-iam-third-party.yml@latest
    input:
      status: passed
      note: 'yes'
  - name: |
      IAM-006. Grant least privilege access
    uses: >-
      jitsecurity-controls/jit-plans/items/identity_and_access_management/item-iam-least-privilege.yml@latest
    input:
      status: passed
      note: 'yes'
  - name: |
      IAM-007. Manage access based on life cycle
    uses: >-
      jitsecurity-controls/jit-plans/items/identity_and_access_management/item-iam-manage-access-lifecycle.yml@latest
    input:
      status: passed
      note: 'yes'
  - name: |
      IAM-008. Audit identities quarterly
    uses: >-
      jitsecurity-controls/jit-plans/items/identity_and_access_management/item-iam-audit.yml@latest
    input:
      status: passed
      note: 'yes'
  - name: |
      IAM-010. Store secrets securely
    uses: >-
      jitsecurity-controls/jit-plans/items/identity_and_access_management/item-iam-store-secrets.yml@latest
    input:
      status: passed
      note: 'yes'
  - name: |
      IAM-012. Use temporary credentials
    uses: >-
      jitsecurity-controls/jit-plans/items/identity_and_access_management/item-iam-temp-creds.yml@latest
    input:
      status: passed
      note: 'yes'
  - name: >
      IAM-011. Encrypt all end user/customer credentials and hash passwords at
      rest
    uses: >-
      jitsecurity-controls/jit-plans/items/identity_and_access_management/item-iam-encrypt-creds-at-rest.yml@latest
    input:
      status: passed
      note: 'yes'
  - name: |
      SECOPS-001. Perform vulnerability management
    uses: >-
      jitsecurity-controls/jit-plans/items/operational_security/item-secops-vulnerabiliy-mgt.yml@latest
    input:
      status: passed
      note: 'yes'
  - name: >
      NETSEC-001. Implement the least permissive rules for all Amazon EC2
      security groups
    uses: >-
      jitsecurity-controls/jit-plans/items/network_security/item-netsec-sg.yml@latest
    input:
      status: passed
      note: 'yes'
  - name: |
      NETSEC-002. Restrict resources in public subnets
    uses: >-
      jitsecurity-controls/jit-plans/items/network_security/item-netsec-public-subnets.yml@latest
  - name: |
      BAR-001. Configure automatic data backups
    uses: >-
      jitsecurity-controls/jit-plans/items/backups_and_recovery/item-backup-schedule.yml@latest
    input:
      status: passed
      note: 'yes'
  - name: |
      SDAT-002. Encrypt all sensitive data at rest
    uses: >-
      jitsecurity-controls/jit-plans/items/sensitive_data/item-sensitive-data-encrypt-at-rest.yml@latest
  - name: |
      RES-001. Define a Recovery Point Objective (RPO)
    uses: >-
      jitsecurity-controls/jit-plans/items/resiliency/item-resiliency-rpo.yml@latest
    input:
      status: passed
      note: 'yes'
  - name: |
      RES-002. Establish a Recovery Time Objective (RTO)
    uses: >-
      jitsecurity-controls/jit-plans/items/resiliency/item-resiliency-rto.yml@latest
    input:
      status: passed
      note: 'yes'
  - name: |
      RES-004. Resiliency Testing
    uses: >-
      jitsecurity-controls/jit-plans/items/resiliency/item-resiliency-testing.yml@latest
    input:
      status: passed
      note: 'yes'
  - name: |
      RES-005. Communicate customer responsibilities for resilience
    uses: >-
      jitsecurity-controls/jit-plans/items/resiliency/item-resiliency-communication.yml@latest
    input:
      status: passed
      note: 'yes'
  - name: >
      RES-006. Architect your product to meet availability targets and uptime
      service level agreements (SLAs)
    uses: >-
      jitsecurity-controls/jit-plans/items/resiliency/item-resiliency-sla.yml@latest
    input:
      status: passed
      note: 'yes'
  - name: |
      RES-007. Define a customer communication plan for outages
    uses: >-
      jitsecurity-controls/jit-plans/items/resiliency/item-resiliency-outages.yml@latest
    input:
      status: passed
      note: 'yes'

